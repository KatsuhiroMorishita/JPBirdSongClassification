file_names: glob.glob(r"../../data/sounds/*.wav")
root: "sample"   # 保存先のフォルダ名
term: 5          # -1だと音源全体でスペクトログラム画像を作るが、数字を渡すとその時間幅[s]で画像を作る
shift_rate: 0.5  # 作成するスペクトログラムをずらす量。1.0だと重なりなく作る。0.5だと半分重ねる。0.25だと4分の3重ねる。
hop: 0.0251      # 作る画像の時間分解能[s]
sr: 44100        # 読み込む際のサンプリングレート。この設定と音源のサンプリングレートが異なる場合はリサンプリングされる。
spectrogram_mode: "spectrogram1"    #  spectrogram1: mel scall or spectrogram2: liner scall

spectrogram1:
  n_mels: 120      # 作成するスペクトログラム画像の周波数方向の分解能
  fmax: 22000      # 作成するスペクトログラム画像の最大周波数[Hz]
  top_remove: 0    # スペクトログラム画像を一旦作成した後に削除する上部のピクセル数。互換性のために残しているが、他の設定のおかげで実質不要となった。
  n_fft: 2048
  raw: True        # スペクトログラムに生の音声の振幅情報を埋め込むかどうか。Trueで埋め込む。
  emphasize_band: null   # exmple: [2500, 4500, 0.1]            強調する帯域. nullはPython内部ではNone扱い。
  cut_band: null         # exmple: [[15500, 220000, "lower"]]   カットする帯域
  #cut_band: [[0, 500, "upper"], [16000, 22000, "lower"]]
  bandpass_param: []     # 帯域通過フィルタのパラメータ。例：[200, 600, 2000, 5000]
  #bandpass_param: [200, 500, 1500, 5000]
  noise: 0.0             # スペクトログラムを作成する際にノイズを加える場合は0より大きな値を指定すること

spectrogram2:
  ylim: [1000, 6000]
  xticks_unit: 1.0     # 横軸のグリッド単位
  figsize: [15,5]      # 図のサイズ。横縦の順。


#path_replace, [r"aaa", r"bbb"]      # パスを書き換える場合
location_save_only: False   # Trueだと、location IDのみを保存する。画像は不要だが、IDのチェックをしたいときにTrueとするとよい。